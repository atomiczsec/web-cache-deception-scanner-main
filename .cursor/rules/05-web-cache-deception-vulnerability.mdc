---
description: 
globs: 
alwaysApply: false
---
# Web Cache Deception Vulnerability

## Overview

Web Cache Deception (WCD) is a web application vulnerability first disclosed by Omer Gil in 2017. It allows attackers to trick web caches into storing private user data and then access that cached data without authentication.

## How the Attack Works

1. An attacker identifies a page containing sensitive information (e.g., `/account`)
2. The attacker crafts a malicious URL by appending a path or extension that looks like a static resource (e.g., `/account/non-existent.css`)
3. The attacker tricks a victim into visiting this URL while logged in
4. The web server processes the request as `/account` (ignoring `/non-existent.css`)
5. The web cache sees the `.css` extension and caches the response
6. The attacker can now access the cached sensitive content without authentication

## Vulnerability Conditions

Two conditions must be met for a web application to be vulnerable:

1. **Path Handling Discrepancy**: The application must handle paths in a way that ignores trailing segments
2. **Cache Misconfiguration**: The caching layer must make caching decisions based on URL patterns like file extensions rather than cache headers

## Detection Logic

The scanner in [RequestSender.java](mdc:src/main/java/burp/RequestSender.java) implements several techniques to detect this vulnerability:

- Path mapping tests to check if the server ignores trailing segments
- Extension tests to see if adding file extensions affects caching
- Path normalization tests to check for more complex caching behaviors
- Response similarity analysis to detect when cached content is served

## Remediation

As detailed in [WebCacheIssue.java](mdc:src/main/java/burp/WebCacheIssue.java):

1. Web caches should respect Cache Control headers rather than relying on URL patterns
2. Application servers should validate the full URL path and reject requests with unexpected path segments
3. Sensitive pages should include proper cache control headers like `Cache-Control: no-store, private`
